---
title: How to decommission unused template deploy services
last_reviewed_on: 2019-12-09
review_in: 3 months
---

# <%= current_page.data.title %>


### 1.	Stack Deletion (will also delete related instances, vpu’s, security groups, network gateways etc).

NOTE As a first port of call we would recommend raising a support ticket in [#ask-cloud-platform](https://mojdt.slack.com/messages/C57UPMZLY/team/U58MLFA0M/) requesting that cloud-platform delete your AWS stack. 

In most cases cloud-platform’s will have the necessary credentials to delete the stack for you (most template-deploy stacks will have been created within the mojdsd AWS account).
 
NOTE Caution should also be taken as AWS Route53 dns configuration may be deleted (and this could be referenced in new AWS account Kubernetes setups). We would recommend making a copy of any such configuration so that it can be reinstated if necessary. 
Should you wish to go ahead yourselves, whilst it is possible to delete from the AWS stack dashboard, for a cleaner operation (the deleting of related AWS resources) the following fabric command should be carried out:

in order to proceed, you need to have :

* installed the prerequisite tools
* configured your AWS credentials
* configured your github access
* create your own GPG key
  
   a.	Run [mkvirtualenv](https://dsdmoj.atlassian.net/wiki/spaces/PLAT/pages/82640903/Quickstart+-+Template+Deploy) to create your local environment.

   b.	Run the fabric command to delete your stack

The Fabric command to delete an AWS stack:

```
$ fab aws:<awsaccountname> environment:<environmentname> application:<projectname> config:cloudformation/<projectname>.yaml  passwords:cloudformation/<projectname>-secrets.yaml -u <githubsshkey> cfn_delete
```

### 2.	Jenkins Projects:

NOTE If you do not have the necessary permissions to carry out the following actions, raise a support ticket in [#ask-cloud-platform](https://mojdt.slack.com/messages/C57UPMZLY/team/U58MLFA0M/ 

   a.   Disable the project (if you wish to retain the configuration for reference):

   	i.   Locate your project’s job:

   	ii.  Click on the “Disable Project” button:

![Image description](https://i.stack.imgur.com/n77nl.png)

   	iii. If you wish to resurrect your project job, click on “Enable” button: 

   b.	Delete the project (if you no longer require the Jenkins deploy config):

   	i.   Click on “Delete Project”:

![Image description](https://issues.jenkins-ci.org/secure/attachment/31690/upload.png)

### 3.	Github deploy repos (this should take place after you have deleted the AWS resources)

NOTE If you do not have the necessary permissions to carry out the following actions, raise a support ticket in [#ask-cloud-platform](https://mojdt.slack.com/messages/C57UPMZLY/team/U58MLFA0M/

   a.	[Archive the Github deploy repos](https://help.github.com/en/articles/archiving-repositories)  (if you still require the deploy configuration for reference)

   	i.   Locate your deploy-repos. Click on the “Settings” button:

   	ii.  Click on the “Archive this repository” button:

   	iii. Type in the name of the repository and then click “I understand the consequences, archive this repository”:

   	iv.  The deploy repository will then be archived (confirmatory message will appear):

   b.	[Delete the Github deploy repos](https://help.github.com/en/articles/deleting-a-repository)  (if you no longer require the deploy configuration for reference)

   	i.   As for archiving -Locate your deploy-repos. Click on the “Settings” button. Then click on the “Delete this repository” button:
 
### 4.	Docker Images:

   a.	The docker image repository will be completely decommissioned when we have switched everything over from template-deploy