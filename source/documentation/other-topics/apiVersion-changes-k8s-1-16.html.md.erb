---
title: Removing Deprecated APIs for Kubernetes version 1.16
last_reviewed_on: 2020-06-09
review_in: 3 months
---

# <%= current_page.data.title %>

The Cloud Platform kubernetes cluster has to be upgraded from 1.15.10 to 1.16.10.
 
When an Kubernetes API evolves, certain APIs are reorganized/upgraded or removed.
Therefore before the upgrade can take place, a number of deprecated 
APIs have to be removed from the manifest used to create kubernetes resources.<br> 
The replacement APIs are already available within the current kubernetes version 1.15.10.

Below are the details of the APIs that have been removed in this release, together with the related replacement APIs that should be used in their place.<br>
It is therefore **mandatory** to update the affected manifest with the replacements shown below
before we upgrade the cluster to kubernetes version 1.16.

- All resources under `apps/v1beta1` and `apps/v1beta2` - use `apps/v1` instead
- `daemonsets`, `deployments`, `replicasets` resources under `extensions/v1beta1` - use `apps/v1` instead
- `networkpolicies` resources under `extensions/v1beta1` - use `networking.k8s.io/v1` instead
- `podsecuritypolicies` resources under `extensions/v1beta1` - use `policy/v1beta1` instead
- `ingress` resources will no longer be served from `extensions/v1beta1` in v1.20. - use `networking.k8s.io/v1beta1` instead

- Resources deployed using helm chart
  If you are using helm version < 2.16.3, then the generated manifest would have the deprecated APIs. It is therefore **mandatory** 
  to upgrade the helm version to > 2.16.3, ideally to Helm 3.

More detailed changes to kubernetes resources are explained in this [kubernetes blog](https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/) and 
the [1.16 CHANGELOG](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.16.md#deprecations-and-removals)

## What to do

- We have identified the list of affected resources on all namespaces in this [google sheet](https://docs.google.com/spreadsheets/d/1DY4PSZjmXqLcnqww0NetmIjMdw3p0hUqfv_ytJ304j4/edit?usp=sharing)

- Please make your changes to the following:

 * [If you deployed an application to the Cloud Platform with kubectl](http://localhost:4567/documentation/other-topics/apiVersion-changes-k8s-1-16.html#kubernetes-k8s)

 * [If you deployed an application to the Cloud Platform with Helm](http://localhost:4567/documentation/other-topics/apiVersion-changes-k8s-1-16.html#helm-deployments)

### kubectl 

#### Deployments

- Issue the following command to see if you are using deprecated API versions:

```kubectl describe deployment -n <namespace> | egrep '"apiVersion":"extensions/v1beta1"|"apiVersion":"apps/v1beta1"|"apiVersion":"apps/v1beta2"'```

- If you deployment manifest looks similar to below:

<pre>
    apiVersion: <b>extensions/v1beta1</b> 
(or apiVersion: <b>apps/v1beta1</b> or apiVersion: <b>apps/v1beta2</b>)
    kind: Deployment
    metadata:
      name: helloworld-rubyapp
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: helloworld-rubyapp
        spec:
          containers:
</pre>

- Migrate to use the apps/v1 API version:

[deployment.yaml](https://user-guide.cloud-platform.service.justice.gov.uk/documentation/deploying-an-app/helloworld-app-deploy.html#deployment-yaml)

- Main changes include

 * Change the `apiVersion` tp `apps/v1`
 * Add `spec.selector` **if one not present** and use the existing `spec.template.metadata.labels` as the selector

- The manifest after changes will look like:

<pre>
    apiVersion: <b>apps/v1</b>
    kind: Deployment
    metadata:
      name: helloworld-rubyapp
    spec:
      replicas: 1
      <b>selector:
        matchLabels:
          app: helloworld-rubyapp</b>

    template:
        metadata:
          labels:
            app: helloworld-rubyapp
        spec:
          containers:
</pre>

- To apply your changes:

```kubectl apply --filename deployment-yaml --namespace <namespace>```

- Issue the following command again (the list should decrease as you apply your changes):

```kubectl describe deployment -n <namespace> | egrep '"apiVersion":"extensions/v1beta1"|"apiVersion":"apps/v1beta1"|"apiVersion":"apps/v1beta2"'```

#### Ingress

- Issue the following command to see if you are using deprecated API versions:

```kubectl describe ingress --all-namespaces | grep '"apiVersion":"extensions/v1beta1"'```

- If you Ingress configuration looks similar to below

<pre>
    apiVersion: <b>extensions/v1beta1</b>
    kind: Ingress
    metadata:
      name: helloworld-rubyapp-ingress
    spec:
      .................
</pre>

- Migrate to use the networking.k8s.io/v1beta1 API version:

[ingress.yaml](https://user-guide.cloud-platform.service.justice.gov.uk/documentation/deploying-an-app/helloworld-app-deploy.html#ingress-yaml)

- Main changes include

 * Change the `apiVersion` to `networking.k8s.io/v1beta1`

- The Networkpolicy configuration after changes will look like:
<pre>
    apiVersion: <b>networking.k8s.io/v1beta1</b>
    kind: Ingress
    metadata:
      name: helloworld-rubyapp-ingress
    spec:
      .................
</pre>

- To apply your changes:

```kubectl apply --filename ingress.yaml --namespace [your namespace]```

- Issue the following command again (the list should decrease as you apply your changes):

```kubectl describe ingress --all-namespaces | grep '"apiVersion":"extensions/v1beta1"'```

- See "Notable changes" section in the [kubernetes blog](https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/),
if any other fields in your manifest are affected.

### Helm Deployments

- Prerequisite: pluto installed

```brew install FairwindsOps/tap/pluto```

- Issue the following command to see if you have applications deployed utilising Helm v2

```pluto detect-helm --helm-version 2 -n <namespace>  -owide```

[Migrate from Helm v2 to Helm v3](https://user-guide.cloud-platform.service.justice.gov.uk/documentation/deploying-an-app/app-deploy-helm.html#migrate-from-helm-v2-to-helm-v3)

- Once completed issue the following command to check applications correctly deployed utilising Helm v3

```pluto detect-helm --helm-version 2 -n <namespace>  -owide```

