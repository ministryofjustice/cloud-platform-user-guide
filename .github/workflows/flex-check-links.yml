## Flexible Link Checker for Documentation Site
# 
# This workflow builds the documentation site and checks for broken links while:
# - Ignoring common non-critical HTTP status codes (400, 401, 402, 403, 429)
#   that often represent temporary issues or authorization requirements
# - Continuing the workflow even when issues are found (non-blocking)
# - Allowing missing href attributes and hash-only references
#
# WHY: External resources often return non-404 errors for valid reasons:
# - 400-403: Authentication required or access denied (e.g., GitHub, Slack links)
# - 429: Rate limiting (especially from GitHub API and other high-traffic services)
#
# The workflow still catches genuine 404 errors (broken links) while reducing
# false positives that would otherwise cause check failures.
name: Check Links (Flexible)

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'source/**'

jobs:
  link-check:
    name: Build and Check Links
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ministryofjustice/tech-docs-github-pages-publisher:v5.1.0
      options: --platform linux/amd64
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      # Skip bundle install since we'll use the container's pre-installed gems
        
      - name: Build site with Middleman
        run: |
          # Use bundle exec but without reinstalling gems
          bundle exec middleman build --build-dir docs --relative-links --verbose
      
      - name: Run HTMLProofer link checks
        run: |
          htmlproofer ./docs \
            --ignore-status-codes "400,401,402,403,429" \
            --allow-hash-href --allow-missing-href || echo "Link check found issues but continuing with workflow"